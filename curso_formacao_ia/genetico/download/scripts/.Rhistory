library(GA)
f <-function(x)
{
#equação 2* x + 5 = 20
resultado = 2 * x + 5
if (resultado > 20)
return (20 - resultado)
else
return (resultado - 20)
}
resultado = ga("real-value", fitness = f, min=c(-20),max=c(20) ,popSize = 10, maxiter = 10,  monitor = T, names= c("a"))
resultado
summary(resultado)
summary(resultado)$solution
resultado
resultado@population
mochila <- data.frame(item = c("canivete", "feijao", "batatas", "lanterna",
"saco de dormir", "corda", "bussula"), pontos = c(10, 20, 15, 2, 30,
10, 30), peso = c(1, 5, 10, 1, 7, 5, 1))
f <-function(x)
{
pontos = 0
peso = 0
for (i in 1:7)
{
if (x[ i ] != 0)
{
pontos = pontos + mochila[i,2]
peso = peso +  mochila[i,3]
}
}
if (peso > 15)
pontos = 0
return( pontos)
}
esultado = ga("binary", fitness = f, nBits = 7,popSize = 10, maxiter = 15,  names= c("canivete", "feijão", "batatas", "lanterna", "saco de dormir", "corda", "bussula"))
resultado@population
resultado = ga("binary", fitness = f, nBits = 7,popSize = 10, maxiter = 15,  names= c("canivete", "feijão", "batatas", "lanterna", "saco de dormir", "corda", "bussula"))
resultado@population
f <-function(x)
{
#equação 2* x + 5 = 20
resultado = 2 * x + 5
if (resultado > 20)
return (20 - resultado)
else
return (resultado - 20)
}
#algoritmo genetico
resultado = ga("real-value", fitness = f, min=c(-20),max=c(20) ,popSize = 10, maxiter = 10,  monitor = T, names= c("a"))
resultadoreal = resultado
resultadoreal@population
f <-function(x)
{
pontos = 0
peso = 0
for (i in 1:7)
{
if (x[ i ] != 0)
{
pontos = pontos + mochila[i,2]
peso = peso +  mochila[i,3]
}
}
if (peso > 15)
pontos = 0
return( pontos)
}
#algoritmo genetico
resultado = ga("binary", fitness = f, nBits = 7,popSize = 10, maxiter = 15,  names= c("canivete", "feijão", "batatas", "lanterna", "saco de dormir", "corda", "bussula"))
resultadobinario = resultado
resultadobinário@population
resultadobinario@population
f <-function(z) {
dist = 0
for (i in 1:4)
{
cidade1 = z[i]
cidade2 = z[i+1]
dist = dist + mapa[cidade1, cidade2]
}
return(-dist)
}
#algoritmo genetico
resultado <- ga(type="permutation", fitness=f,min=c(1,1,1,1,1), max=c(5,5,5,5,5),popSize = 10, maxiter = 5, names=c("Linden","Parika","Lethem","Rosignol","New Amsterdam"))
mapa =read.csv(file.choose(), header=F, sep=";")
f <-function(z) {
dist = 0
for (i in 1:4)
{
cidade1 = z[i]
cidade2 = z[i+1]
dist = dist + mapa[cidade1, cidade2]
}
return(-dist)
}
#algoritmo genetico
resultado <- ga(type="permutation", fitness=f,min=c(1,1,1,1,1), max=c(5,5,5,5,5),popSize = 10, maxiter = 5, names=c("Linden","Parika","Lethem","Rosignol","New Amsterdam"))
resultadopermutacao = resultado
resultado
resultadopermutacao = resultado
resultadopermutacao$population
compras <- function(solucao)
{
#solucao = c(1,0,1,1,1,0,1,0,1,1,1,0)
valores = c(1.1,1.2,1.25,1.41,1.5,1.63,2.05,2.22,2.65,2.9,3.04,3.16)
soma = 0;
produto = 1;
for (i in 1:12) {
if (solucao[i]==1)
{
soma = soma + valores[i];
produto = produto * valores[i];
}
}
if (soma==7.11 & produto==7.11)
{
return(7.11)
}
else
{
return(0)
}
}
library(tabuSearch)
z = tabuSearch(size = 12, iters = 1000, objFunc = compras,
listSize = 9, nRestarts = 10, repeatAll = 1, verbose = T)
summary(z)
summary(z, verbose = TRUE)
z$iters
z$listSize
mapa =read.csv(file.choose(), header=F, sep=";")
mapa
f <-function(z) {
dist = 0
for (i in 1:4)
{
cidade1 = z[i]
cidade2 = z[i+1]
dist = dist + mapa[cidade1, cidade2]
}
return(-dist)
}
